# KERNEL DIRECTORY MAKEFILE - v0.1
#
# Not ready to be used as Makefile, it's used by the configure script to build
# the final Makefile, that will be used to build the bootloader
#
# If you haven't already, run the configure script in the top level directory!
#
# In the final makefile, run 'make help' for a list of targets
#
#
# 2023 Diogo Gomes

include ../config.mk

SCRIPTVERSION:=0.1

ifneq ($(MADE_CONFIG),true)
$(error We're not properly configured, run ./configure!!)
endif

################################################

.PHONY: all install

all: kernel.bin

# Where we install to (in general, sysroot)
DESTDIR?=$(SYSROOT)/kernel

$(DESTDIR):
	$(Q)mkdir -p $(DESTDIR)

install: all $(DESTDIR) $(DESTDIR)/kernel.bin
#$(DESTDIR)/stage0.bin: all
#	$(call cmd,cp)
#	$(Q)cp stage0.bin $(DESTDIR)/stage0.bin
# Dummy kernel
$(DESTDIR)/kernel.bin: all
	$(call cmd,cp)
	$(Q)cp $(ROOT_SRCDIR)/kernel/kernel.bin $(DESTDIR)/kernel.bin


# Include the list of sources
include $(ROOT_SRCDIR)/kernel/src.mk

# Generate list of objs
KERNELOBJS:=$(patsubst %.S,%.o,$(KERNELSRC))

# Correct sources for source directory
KERNELSRC:=$(addprefix $(ROOT_SRCDIR)/kernel,$(KERNELSRC))

################################################

%.o: $(ROOT_SRCDIR)/kernel/%.S
	$(call cmd,as)
	$(Q)$(CC) -MD -c $< -o $@ $(CFLAGS)

kernel.bin:
	@echo "Dummy kernel.bin"

#stage0.bin: stage0.o
#	$(call cmd,ld)
#	$(Q)$(LD) --oformat binary -o stage0.bin -Ttext 0x0500 stage0.o
#
#stage1.bin: stage1.o
#	$(call cmd,ld)
#	$(Q)$(LD) --oformat binary -o stage1.bin -Ttext 0x7C00 stage1.o

clean:
	-$(Q)rm -f $(shell find . -name '*.bin')
	-$(Q)rm -f $(shell find . -name '*.o')
	-$(Q)rm -f $(shell find . -name '*.d')
	@echo '   Clean done!'

# Allows printing a make variable in command line as: make print-VAR
# Good for debugging
print-%  : ; @echo $* = $($*)