#@START_HEADER
# LIB32 MAKEFILE - v0.2
#
# Not ready to be used as Makefile, this is a template, that is used by config.sh
# to write the final Makefile. If you haven't already, run the config.sh script!
#
#
# 2024 Diogo Gomes

#@END_HEADER

ifneq ($(MADE_CONFIG),true)
$(error We're not properly configured, run ./configure!!)
endif

override SHELL:=/bin/bash
include $(ROOTSRCDIR)/config/config.mk
include $(ROOTSRCDIR)/config/output.mk
include ../progs.mk

include $(ROOTSRCDIR)/lib/sources32.mk

CFLAGS32:=$(CFLAGS32) -D__lib32__
CXXFLAGS32:=$(CXXFLAGS32) -D__lib32__

SUBDIRS:=$(shell find $(ROOTSRCDIR)/lib -type d)

# Generate rules
define generateRulesAS
%.o: $(1)/%.S
	$$(call run_command, $(AS32) -MD -c $$< -o $$@ $(CFLAGS32), "AS")
endef

define generateRulesCC
%.o: $(1)/%.c
	$$(call run_command, $(CC32) -MD -c $$< -o $$@ $(CFLAGS32), "CC")
endef

define generateRulesCXX
%.o: $(1)/%.cpp
	$$(call run_command, $(CXX32) -MD -c $$< -o $$@ $(CXXFLAGS32), "CXX")
endef

.PHONY: all clean

all: lib32.ar

lib32.ar: $(OBJS)
	$(call run_command, $(AR) rcs $@ $(OBJS), "Archiving")

# Generate compilation rules
$(foreach subdir, $(SUBDIRS), $(eval $(call generateRulesAS, $(subdir))))
$(foreach subdir, $(SUBDIRS), $(eval $(call generateRulesCC, $(subdir))))
$(foreach subdir, $(SUBDIRS), $(eval $(call generateRulesCXX, $(subdir))))

clean:
	-@rm -f lib32.ar
	-@rm -f $(shell find . -name '*.o')
	-@rm -f $(shell find . -name '*.d')
	-@rm -f $(shell find . -name '*.ar')

-include $(OBJS:.o=.d)